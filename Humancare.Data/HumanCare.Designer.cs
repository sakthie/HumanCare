//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HealthCareNewModel", "FK_Doctor_AppntSlot_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Humancare.Data.Doctor), "Doctor_AppntSlot", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Humancare.Data.Doctor_AppntSlot), true)]
[assembly: EdmRelationshipAttribute("HealthCareNewModel", "FK_Doctor_Room_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Humancare.Data.Doctor), "Doctor_Room", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Humancare.Data.Doctor_Room), true)]
[assembly: EdmRelationshipAttribute("HealthCareNewModel", "FK_Doctor_Specialization_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Humancare.Data.Doctor), "Doctor_Specialization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Humancare.Data.Doctor_Specialization), true)]
[assembly: EdmRelationshipAttribute("HealthCareNewModel", "FK_Doctor_Room_Room", "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Humancare.Data.Room), "Doctor_Room", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Humancare.Data.Doctor_Room), true)]
[assembly: EdmRelationshipAttribute("HealthCareNewModel", "FK_Patient_Appointment_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Humancare.Data.Patient), "Patient_Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Humancare.Data.Patient_Appointment), true)]
[assembly: EdmRelationshipAttribute("HealthCareNewModel", "FK_Patient_Prescription_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Humancare.Data.Patient), "Patient_Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Humancare.Data.Patient_Prescription), true)]
[assembly: EdmRelationshipAttribute("HealthCareNewModel", "FK_Patient_Room_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Humancare.Data.Patient), "Patient_Room", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Humancare.Data.Patient_Room), true)]
[assembly: EdmRelationshipAttribute("HealthCareNewModel", "FK_Patient_Treatment_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Humancare.Data.Patient), "Patient_Treatment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Humancare.Data.Patient_Treatment), true)]
[assembly: EdmRelationshipAttribute("HealthCareNewModel", "FK_Patient_Treatment_Patient_Prescription", "Patient_Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Humancare.Data.Patient_Prescription), "Patient_Treatment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Humancare.Data.Patient_Treatment), true)]
[assembly: EdmRelationshipAttribute("HealthCareNewModel", "FK_Prescription_Medicine_Patient_Prescription", "Patient_Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Humancare.Data.Patient_Prescription), "Prescription_Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Humancare.Data.Prescription_Medicine), true)]
[assembly: EdmRelationshipAttribute("HealthCareNewModel", "FK_Room_Patient_Room", "Patient_Room", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Humancare.Data.Patient_Room), "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Humancare.Data.Room), true)]
[assembly: EdmRelationshipAttribute("HealthCareNewModel", "FK_Staff_Room", "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Humancare.Data.Room), "Staff", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Humancare.Data.Staff), true)]

#endregion

namespace Humancare.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HealthCareNewEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HealthCareNewEntities object using the connection string found in the 'HealthCareNewEntities' section of the application configuration file.
        /// </summary>
        public HealthCareNewEntities() : base("name=HealthCareNewEntities", "HealthCareNewEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HealthCareNewEntities object.
        /// </summary>
        public HealthCareNewEntities(string connectionString) : base(connectionString, "HealthCareNewEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HealthCareNewEntities object.
        /// </summary>
        public HealthCareNewEntities(EntityConnection connection) : base(connection, "HealthCareNewEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Doctor> Doctors
        {
            get
            {
                if ((_Doctors == null))
                {
                    _Doctors = base.CreateObjectSet<Doctor>("Doctors");
                }
                return _Doctors;
            }
        }
        private ObjectSet<Doctor> _Doctors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Doctor_AppntSlot> Doctor_AppntSlot
        {
            get
            {
                if ((_Doctor_AppntSlot == null))
                {
                    _Doctor_AppntSlot = base.CreateObjectSet<Doctor_AppntSlot>("Doctor_AppntSlot");
                }
                return _Doctor_AppntSlot;
            }
        }
        private ObjectSet<Doctor_AppntSlot> _Doctor_AppntSlot;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Doctor_Room> Doctor_Room
        {
            get
            {
                if ((_Doctor_Room == null))
                {
                    _Doctor_Room = base.CreateObjectSet<Doctor_Room>("Doctor_Room");
                }
                return _Doctor_Room;
            }
        }
        private ObjectSet<Doctor_Room> _Doctor_Room;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Doctor_Specialization> Doctor_Specialization
        {
            get
            {
                if ((_Doctor_Specialization == null))
                {
                    _Doctor_Specialization = base.CreateObjectSet<Doctor_Specialization>("Doctor_Specialization");
                }
                return _Doctor_Specialization;
            }
        }
        private ObjectSet<Doctor_Specialization> _Doctor_Specialization;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patient>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patient> _Patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient_Appointment> Patient_Appointment
        {
            get
            {
                if ((_Patient_Appointment == null))
                {
                    _Patient_Appointment = base.CreateObjectSet<Patient_Appointment>("Patient_Appointment");
                }
                return _Patient_Appointment;
            }
        }
        private ObjectSet<Patient_Appointment> _Patient_Appointment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient_Prescription> Patient_Prescription
        {
            get
            {
                if ((_Patient_Prescription == null))
                {
                    _Patient_Prescription = base.CreateObjectSet<Patient_Prescription>("Patient_Prescription");
                }
                return _Patient_Prescription;
            }
        }
        private ObjectSet<Patient_Prescription> _Patient_Prescription;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient_Room> Patient_Room
        {
            get
            {
                if ((_Patient_Room == null))
                {
                    _Patient_Room = base.CreateObjectSet<Patient_Room>("Patient_Room");
                }
                return _Patient_Room;
            }
        }
        private ObjectSet<Patient_Room> _Patient_Room;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient_Treatment> Patient_Treatment
        {
            get
            {
                if ((_Patient_Treatment == null))
                {
                    _Patient_Treatment = base.CreateObjectSet<Patient_Treatment>("Patient_Treatment");
                }
                return _Patient_Treatment;
            }
        }
        private ObjectSet<Patient_Treatment> _Patient_Treatment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Prescription_Medicine> Prescription_Medicine
        {
            get
            {
                if ((_Prescription_Medicine == null))
                {
                    _Prescription_Medicine = base.CreateObjectSet<Prescription_Medicine>("Prescription_Medicine");
                }
                return _Prescription_Medicine;
            }
        }
        private ObjectSet<Prescription_Medicine> _Prescription_Medicine;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Room> Rooms
        {
            get
            {
                if ((_Rooms == null))
                {
                    _Rooms = base.CreateObjectSet<Room>("Rooms");
                }
                return _Rooms;
            }
        }
        private ObjectSet<Room> _Rooms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Specialization> Specializations
        {
            get
            {
                if ((_Specializations == null))
                {
                    _Specializations = base.CreateObjectSet<Specialization>("Specializations");
                }
                return _Specializations;
            }
        }
        private ObjectSet<Specialization> _Specializations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Staff> Staffs
        {
            get
            {
                if ((_Staffs == null))
                {
                    _Staffs = base.CreateObjectSet<Staff>("Staffs");
                }
                return _Staffs;
            }
        }
        private ObjectSet<Staff> _Staffs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Nationality> Nationalities
        {
            get
            {
                if ((_Nationalities == null))
                {
                    _Nationalities = base.CreateObjectSet<Nationality>("Nationalities");
                }
                return _Nationalities;
            }
        }
        private ObjectSet<Nationality> _Nationalities;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Doctors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoctors(Doctor doctor)
        {
            base.AddObject("Doctors", doctor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Doctor_AppntSlot EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoctor_AppntSlot(Doctor_AppntSlot doctor_AppntSlot)
        {
            base.AddObject("Doctor_AppntSlot", doctor_AppntSlot);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Doctor_Room EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoctor_Room(Doctor_Room doctor_Room)
        {
            base.AddObject("Doctor_Room", doctor_Room);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Doctor_Specialization EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoctor_Specialization(Doctor_Specialization doctor_Specialization)
        {
            base.AddObject("Doctor_Specialization", doctor_Specialization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patient patient)
        {
            base.AddObject("Patients", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patient_Appointment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatient_Appointment(Patient_Appointment patient_Appointment)
        {
            base.AddObject("Patient_Appointment", patient_Appointment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patient_Prescription EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatient_Prescription(Patient_Prescription patient_Prescription)
        {
            base.AddObject("Patient_Prescription", patient_Prescription);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patient_Room EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatient_Room(Patient_Room patient_Room)
        {
            base.AddObject("Patient_Room", patient_Room);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patient_Treatment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatient_Treatment(Patient_Treatment patient_Treatment)
        {
            base.AddObject("Patient_Treatment", patient_Treatment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Prescription_Medicine EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrescription_Medicine(Prescription_Medicine prescription_Medicine)
        {
            base.AddObject("Prescription_Medicine", prescription_Medicine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rooms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRooms(Room room)
        {
            base.AddObject("Rooms", room);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Specializations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecializations(Specialization specialization)
        {
            base.AddObject("Specializations", specialization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Staffs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStaffs(Staff staff)
        {
            base.AddObject("Staffs", staff);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Nationalities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNationalities(Nationality nationality)
        {
            base.AddObject("Nationalities", nationality);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HealthCareNewModel", Name="Doctor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Doctor object.
        /// </summary>
        /// <param name="doctorId">Initial value of the doctorId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="dob">Initial value of the dob property.</param>
        /// <param name="gender">Initial value of the gender property.</param>
        /// <param name="phone">Initial value of the phone property.</param>
        /// <param name="email">Initial value of the email property.</param>
        /// <param name="nationality">Initial value of the nationality property.</param>
        /// <param name="icNum">Initial value of the icNum property.</param>
        /// <param name="street">Initial value of the street property.</param>
        /// <param name="country">Initial value of the country property.</param>
        /// <param name="postalCode">Initial value of the postalCode property.</param>
        public static Doctor CreateDoctor(global::System.String doctorId, global::System.String name, global::System.DateTime dob, global::System.String gender, global::System.Int32 phone, global::System.String email, global::System.String nationality, global::System.String icNum, global::System.String street, global::System.String country, global::System.Int32 postalCode)
        {
            Doctor doctor = new Doctor();
            doctor.doctorId = doctorId;
            doctor.name = name;
            doctor.dob = dob;
            doctor.gender = gender;
            doctor.phone = phone;
            doctor.email = email;
            doctor.nationality = nationality;
            doctor.icNum = icNum;
            doctor.street = street;
            doctor.country = country;
            doctor.postalCode = postalCode;
            return doctor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String doctorId
        {
            get
            {
                return _doctorId;
            }
            set
            {
                if (_doctorId != value)
                {
                    OndoctorIdChanging(value);
                    ReportPropertyChanging("doctorId");
                    _doctorId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("doctorId");
                    OndoctorIdChanged();
                }
            }
        }
        private global::System.String _doctorId;
        partial void OndoctorIdChanging(global::System.String value);
        partial void OndoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dob
        {
            get
            {
                return _dob;
            }
            set
            {
                OndobChanging(value);
                ReportPropertyChanging("dob");
                _dob = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dob");
                OndobChanged();
            }
        }
        private global::System.DateTime _dob;
        partial void OndobChanging(global::System.DateTime value);
        partial void OndobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String gender
        {
            get
            {
                return _gender;
            }
            set
            {
                OngenderChanging(value);
                ReportPropertyChanging("gender");
                _gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("gender");
                OngenderChanged();
            }
        }
        private global::System.String _gender;
        partial void OngenderChanging(global::System.String value);
        partial void OngenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 phone
        {
            get
            {
                return _phone;
            }
            set
            {
                OnphoneChanging(value);
                ReportPropertyChanging("phone");
                _phone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("phone");
                OnphoneChanged();
            }
        }
        private global::System.Int32 _phone;
        partial void OnphoneChanging(global::System.Int32 value);
        partial void OnphoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> startDate
        {
            get
            {
                return _startDate;
            }
            set
            {
                OnstartDateChanging(value);
                ReportPropertyChanging("startDate");
                _startDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("startDate");
                OnstartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _startDate;
        partial void OnstartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnstartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> endDate
        {
            get
            {
                return _endDate;
            }
            set
            {
                OnendDateChanging(value);
                ReportPropertyChanging("endDate");
                _endDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("endDate");
                OnendDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _endDate;
        partial void OnendDateChanging(Nullable<global::System.DateTime> value);
        partial void OnendDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nationality
        {
            get
            {
                return _nationality;
            }
            set
            {
                OnnationalityChanging(value);
                ReportPropertyChanging("nationality");
                _nationality = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nationality");
                OnnationalityChanged();
            }
        }
        private global::System.String _nationality;
        partial void OnnationalityChanging(global::System.String value);
        partial void OnnationalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String icNum
        {
            get
            {
                return _icNum;
            }
            set
            {
                OnicNumChanging(value);
                ReportPropertyChanging("icNum");
                _icNum = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("icNum");
                OnicNumChanged();
            }
        }
        private global::System.String _icNum;
        partial void OnicNumChanging(global::System.String value);
        partial void OnicNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String street
        {
            get
            {
                return _street;
            }
            set
            {
                OnstreetChanging(value);
                ReportPropertyChanging("street");
                _street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("street");
                OnstreetChanged();
            }
        }
        private global::System.String _street;
        partial void OnstreetChanging(global::System.String value);
        partial void OnstreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String area
        {
            get
            {
                return _area;
            }
            set
            {
                OnareaChanging(value);
                ReportPropertyChanging("area");
                _area = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("area");
                OnareaChanged();
            }
        }
        private global::System.String _area;
        partial void OnareaChanging(global::System.String value);
        partial void OnareaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 postalCode
        {
            get
            {
                return _postalCode;
            }
            set
            {
                OnpostalCodeChanging(value);
                ReportPropertyChanging("postalCode");
                _postalCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("postalCode");
                OnpostalCodeChanged();
            }
        }
        private global::System.Int32 _postalCode;
        partial void OnpostalCodeChanging(global::System.Int32 value);
        partial void OnpostalCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Doctor_AppntSlot_Doctor", "Doctor_AppntSlot")]
        public EntityCollection<Doctor_AppntSlot> Doctor_AppntSlot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doctor_AppntSlot>("HealthCareNewModel.FK_Doctor_AppntSlot_Doctor", "Doctor_AppntSlot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doctor_AppntSlot>("HealthCareNewModel.FK_Doctor_AppntSlot_Doctor", "Doctor_AppntSlot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Doctor_Room_Doctor", "Doctor_Room")]
        public Doctor_Room Doctor_Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor_Room>("HealthCareNewModel.FK_Doctor_Room_Doctor", "Doctor_Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor_Room>("HealthCareNewModel.FK_Doctor_Room_Doctor", "Doctor_Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor_Room> Doctor_RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor_Room>("HealthCareNewModel.FK_Doctor_Room_Doctor", "Doctor_Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor_Room>("HealthCareNewModel.FK_Doctor_Room_Doctor", "Doctor_Room", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Doctor_Specialization_Doctor", "Doctor_Specialization")]
        public EntityCollection<Doctor_Specialization> Doctor_Specialization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doctor_Specialization>("HealthCareNewModel.FK_Doctor_Specialization_Doctor", "Doctor_Specialization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doctor_Specialization>("HealthCareNewModel.FK_Doctor_Specialization_Doctor", "Doctor_Specialization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HealthCareNewModel", Name="Doctor_AppntSlot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor_AppntSlot : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Doctor_AppntSlot object.
        /// </summary>
        /// <param name="dateId">Initial value of the dateId property.</param>
        /// <param name="doctorId">Initial value of the doctorId property.</param>
        /// <param name="appntDate">Initial value of the appntDate property.</param>
        public static Doctor_AppntSlot CreateDoctor_AppntSlot(global::System.String dateId, global::System.String doctorId, global::System.DateTime appntDate)
        {
            Doctor_AppntSlot doctor_AppntSlot = new Doctor_AppntSlot();
            doctor_AppntSlot.dateId = dateId;
            doctor_AppntSlot.doctorId = doctorId;
            doctor_AppntSlot.appntDate = appntDate;
            return doctor_AppntSlot;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dateId
        {
            get
            {
                return _dateId;
            }
            set
            {
                if (_dateId != value)
                {
                    OndateIdChanging(value);
                    ReportPropertyChanging("dateId");
                    _dateId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("dateId");
                    OndateIdChanged();
                }
            }
        }
        private global::System.String _dateId;
        partial void OndateIdChanging(global::System.String value);
        partial void OndateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String doctorId
        {
            get
            {
                return _doctorId;
            }
            set
            {
                OndoctorIdChanging(value);
                ReportPropertyChanging("doctorId");
                _doctorId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("doctorId");
                OndoctorIdChanged();
            }
        }
        private global::System.String _doctorId;
        partial void OndoctorIdChanging(global::System.String value);
        partial void OndoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime appntDate
        {
            get
            {
                return _appntDate;
            }
            set
            {
                OnappntDateChanging(value);
                ReportPropertyChanging("appntDate");
                _appntDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("appntDate");
                OnappntDateChanged();
            }
        }
        private global::System.DateTime _appntDate;
        partial void OnappntDateChanging(global::System.DateTime value);
        partial void OnappntDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> slotAvaliable
        {
            get
            {
                return _slotAvaliable;
            }
            set
            {
                OnslotAvaliableChanging(value);
                ReportPropertyChanging("slotAvaliable");
                _slotAvaliable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("slotAvaliable");
                OnslotAvaliableChanged();
            }
        }
        private Nullable<global::System.Int32> _slotAvaliable;
        partial void OnslotAvaliableChanging(Nullable<global::System.Int32> value);
        partial void OnslotAvaliableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> slotAllocated
        {
            get
            {
                return _slotAllocated;
            }
            set
            {
                OnslotAllocatedChanging(value);
                ReportPropertyChanging("slotAllocated");
                _slotAllocated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("slotAllocated");
                OnslotAllocatedChanged();
            }
        }
        private Nullable<global::System.Int32> _slotAllocated;
        partial void OnslotAllocatedChanging(Nullable<global::System.Int32> value);
        partial void OnslotAllocatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> workStartTime
        {
            get
            {
                return _workStartTime;
            }
            set
            {
                OnworkStartTimeChanging(value);
                ReportPropertyChanging("workStartTime");
                _workStartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("workStartTime");
                OnworkStartTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _workStartTime;
        partial void OnworkStartTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnworkStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> workEndTime
        {
            get
            {
                return _workEndTime;
            }
            set
            {
                OnworkEndTimeChanging(value);
                ReportPropertyChanging("workEndTime");
                _workEndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("workEndTime");
                OnworkEndTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _workEndTime;
        partial void OnworkEndTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnworkEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> timePerSlot
        {
            get
            {
                return _timePerSlot;
            }
            set
            {
                OntimePerSlotChanging(value);
                ReportPropertyChanging("timePerSlot");
                _timePerSlot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("timePerSlot");
                OntimePerSlotChanged();
            }
        }
        private Nullable<global::System.Int32> _timePerSlot;
        partial void OntimePerSlotChanging(Nullable<global::System.Int32> value);
        partial void OntimePerSlotChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Doctor_AppntSlot_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("HealthCareNewModel.FK_Doctor_AppntSlot_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("HealthCareNewModel.FK_Doctor_AppntSlot_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("HealthCareNewModel.FK_Doctor_AppntSlot_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("HealthCareNewModel.FK_Doctor_AppntSlot_Doctor", "Doctor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HealthCareNewModel", Name="Doctor_Room")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor_Room : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Doctor_Room object.
        /// </summary>
        /// <param name="doctorId">Initial value of the doctorId property.</param>
        public static Doctor_Room CreateDoctor_Room(global::System.String doctorId)
        {
            Doctor_Room doctor_Room = new Doctor_Room();
            doctor_Room.doctorId = doctorId;
            return doctor_Room;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String doctorId
        {
            get
            {
                return _doctorId;
            }
            set
            {
                if (_doctorId != value)
                {
                    OndoctorIdChanging(value);
                    ReportPropertyChanging("doctorId");
                    _doctorId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("doctorId");
                    OndoctorIdChanged();
                }
            }
        }
        private global::System.String _doctorId;
        partial void OndoctorIdChanging(global::System.String value);
        partial void OndoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String roomId
        {
            get
            {
                return _roomId;
            }
            set
            {
                OnroomIdChanging(value);
                ReportPropertyChanging("roomId");
                _roomId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("roomId");
                OnroomIdChanged();
            }
        }
        private global::System.String _roomId;
        partial void OnroomIdChanging(global::System.String value);
        partial void OnroomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> startDateTime
        {
            get
            {
                return _startDateTime;
            }
            set
            {
                OnstartDateTimeChanging(value);
                ReportPropertyChanging("startDateTime");
                _startDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("startDateTime");
                OnstartDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _startDateTime;
        partial void OnstartDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnstartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> endDateTime
        {
            get
            {
                return _endDateTime;
            }
            set
            {
                OnendDateTimeChanging(value);
                ReportPropertyChanging("endDateTime");
                _endDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("endDateTime");
                OnendDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _endDateTime;
        partial void OnendDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnendDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Doctor_Room_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("HealthCareNewModel.FK_Doctor_Room_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("HealthCareNewModel.FK_Doctor_Room_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("HealthCareNewModel.FK_Doctor_Room_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("HealthCareNewModel.FK_Doctor_Room_Doctor", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Doctor_Room_Room", "Room")]
        public Room Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("HealthCareNewModel.FK_Doctor_Room_Room", "Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("HealthCareNewModel.FK_Doctor_Room_Room", "Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Room> RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("HealthCareNewModel.FK_Doctor_Room_Room", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Room>("HealthCareNewModel.FK_Doctor_Room_Room", "Room", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HealthCareNewModel", Name="Doctor_Specialization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor_Specialization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Doctor_Specialization object.
        /// </summary>
        /// <param name="doctorId">Initial value of the doctorId property.</param>
        /// <param name="specId">Initial value of the specId property.</param>
        public static Doctor_Specialization CreateDoctor_Specialization(global::System.String doctorId, global::System.String specId)
        {
            Doctor_Specialization doctor_Specialization = new Doctor_Specialization();
            doctor_Specialization.doctorId = doctorId;
            doctor_Specialization.specId = specId;
            return doctor_Specialization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String doctorId
        {
            get
            {
                return _doctorId;
            }
            set
            {
                if (_doctorId != value)
                {
                    OndoctorIdChanging(value);
                    ReportPropertyChanging("doctorId");
                    _doctorId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("doctorId");
                    OndoctorIdChanged();
                }
            }
        }
        private global::System.String _doctorId;
        partial void OndoctorIdChanging(global::System.String value);
        partial void OndoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String specId
        {
            get
            {
                return _specId;
            }
            set
            {
                if (_specId != value)
                {
                    OnspecIdChanging(value);
                    ReportPropertyChanging("specId");
                    _specId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("specId");
                    OnspecIdChanged();
                }
            }
        }
        private global::System.String _specId;
        partial void OnspecIdChanging(global::System.String value);
        partial void OnspecIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Doctor_Specialization_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("HealthCareNewModel.FK_Doctor_Specialization_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("HealthCareNewModel.FK_Doctor_Specialization_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("HealthCareNewModel.FK_Doctor_Specialization_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("HealthCareNewModel.FK_Doctor_Specialization_Doctor", "Doctor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HealthCareNewModel", Name="Nationality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Nationality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Nationality object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Nationality CreateNationality(global::System.Int32 id)
        {
            Nationality nationality = new Nationality();
            nationality.Id = id;
            return nationality;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nationality1
        {
            get
            {
                return _Nationality1;
            }
            set
            {
                OnNationality1Changing(value);
                ReportPropertyChanging("Nationality1");
                _Nationality1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nationality1");
                OnNationality1Changed();
            }
        }
        private global::System.String _Nationality1;
        partial void OnNationality1Changing(global::System.String value);
        partial void OnNationality1Changed();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HealthCareNewModel", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="patientId">Initial value of the patientId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="phone">Initial value of the phone property.</param>
        /// <param name="email">Initial value of the email property.</param>
        /// <param name="gender">Initial value of the gender property.</param>
        /// <param name="dob">Initial value of the dob property.</param>
        /// <param name="nationality">Initial value of the nationality property.</param>
        /// <param name="icNum">Initial value of the icNum property.</param>
        /// <param name="street">Initial value of the street property.</param>
        /// <param name="country">Initial value of the country property.</param>
        /// <param name="postalCode">Initial value of the postalCode property.</param>
        public static Patient CreatePatient(global::System.String patientId, global::System.String name, global::System.Int32 phone, global::System.String email, global::System.String gender, global::System.DateTime dob, global::System.String nationality, global::System.String icNum, global::System.String street, global::System.String country, global::System.Int32 postalCode)
        {
            Patient patient = new Patient();
            patient.patientId = patientId;
            patient.name = name;
            patient.phone = phone;
            patient.email = email;
            patient.gender = gender;
            patient.dob = dob;
            patient.nationality = nationality;
            patient.icNum = icNum;
            patient.street = street;
            patient.country = country;
            patient.postalCode = postalCode;
            return patient;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String patientId
        {
            get
            {
                return _patientId;
            }
            set
            {
                if (_patientId != value)
                {
                    OnpatientIdChanging(value);
                    ReportPropertyChanging("patientId");
                    _patientId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("patientId");
                    OnpatientIdChanged();
                }
            }
        }
        private global::System.String _patientId;
        partial void OnpatientIdChanging(global::System.String value);
        partial void OnpatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 phone
        {
            get
            {
                return _phone;
            }
            set
            {
                OnphoneChanging(value);
                ReportPropertyChanging("phone");
                _phone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("phone");
                OnphoneChanged();
            }
        }
        private global::System.Int32 _phone;
        partial void OnphoneChanging(global::System.Int32 value);
        partial void OnphoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String gender
        {
            get
            {
                return _gender;
            }
            set
            {
                OngenderChanging(value);
                ReportPropertyChanging("gender");
                _gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("gender");
                OngenderChanged();
            }
        }
        private global::System.String _gender;
        partial void OngenderChanging(global::System.String value);
        partial void OngenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dob
        {
            get
            {
                return _dob;
            }
            set
            {
                OndobChanging(value);
                ReportPropertyChanging("dob");
                _dob = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dob");
                OndobChanged();
            }
        }
        private global::System.DateTime _dob;
        partial void OndobChanging(global::System.DateTime value);
        partial void OndobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nationality
        {
            get
            {
                return _nationality;
            }
            set
            {
                OnnationalityChanging(value);
                ReportPropertyChanging("nationality");
                _nationality = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nationality");
                OnnationalityChanged();
            }
        }
        private global::System.String _nationality;
        partial void OnnationalityChanging(global::System.String value);
        partial void OnnationalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String icNum
        {
            get
            {
                return _icNum;
            }
            set
            {
                OnicNumChanging(value);
                ReportPropertyChanging("icNum");
                _icNum = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("icNum");
                OnicNumChanged();
            }
        }
        private global::System.String _icNum;
        partial void OnicNumChanging(global::System.String value);
        partial void OnicNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String street
        {
            get
            {
                return _street;
            }
            set
            {
                OnstreetChanging(value);
                ReportPropertyChanging("street");
                _street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("street");
                OnstreetChanged();
            }
        }
        private global::System.String _street;
        partial void OnstreetChanging(global::System.String value);
        partial void OnstreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String area
        {
            get
            {
                return _area;
            }
            set
            {
                OnareaChanging(value);
                ReportPropertyChanging("area");
                _area = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("area");
                OnareaChanged();
            }
        }
        private global::System.String _area;
        partial void OnareaChanging(global::System.String value);
        partial void OnareaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 postalCode
        {
            get
            {
                return _postalCode;
            }
            set
            {
                OnpostalCodeChanging(value);
                ReportPropertyChanging("postalCode");
                _postalCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("postalCode");
                OnpostalCodeChanged();
            }
        }
        private global::System.Int32 _postalCode;
        partial void OnpostalCodeChanging(global::System.Int32 value);
        partial void OnpostalCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Patient_Appointment_Patient", "Patient_Appointment")]
        public EntityCollection<Patient_Appointment> Patient_Appointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient_Appointment>("HealthCareNewModel.FK_Patient_Appointment_Patient", "Patient_Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient_Appointment>("HealthCareNewModel.FK_Patient_Appointment_Patient", "Patient_Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Patient_Prescription_Patient", "Patient_Prescription")]
        public EntityCollection<Patient_Prescription> Patient_Prescription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient_Prescription>("HealthCareNewModel.FK_Patient_Prescription_Patient", "Patient_Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient_Prescription>("HealthCareNewModel.FK_Patient_Prescription_Patient", "Patient_Prescription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Patient_Room_Patient", "Patient_Room")]
        public EntityCollection<Patient_Room> Patient_Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient_Room>("HealthCareNewModel.FK_Patient_Room_Patient", "Patient_Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient_Room>("HealthCareNewModel.FK_Patient_Room_Patient", "Patient_Room", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Patient_Treatment_Patient", "Patient_Treatment")]
        public EntityCollection<Patient_Treatment> Patient_Treatment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient_Treatment>("HealthCareNewModel.FK_Patient_Treatment_Patient", "Patient_Treatment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient_Treatment>("HealthCareNewModel.FK_Patient_Treatment_Patient", "Patient_Treatment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HealthCareNewModel", Name="Patient_Appointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient_Appointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient_Appointment object.
        /// </summary>
        /// <param name="patientId">Initial value of the patientId property.</param>
        /// <param name="appntId">Initial value of the appntId property.</param>
        /// <param name="dateId">Initial value of the dateId property.</param>
        /// <param name="doctorId">Initial value of the doctorId property.</param>
        public static Patient_Appointment CreatePatient_Appointment(global::System.String patientId, global::System.String appntId, global::System.String dateId, global::System.String doctorId)
        {
            Patient_Appointment patient_Appointment = new Patient_Appointment();
            patient_Appointment.patientId = patientId;
            patient_Appointment.appntId = appntId;
            patient_Appointment.dateId = dateId;
            patient_Appointment.doctorId = doctorId;
            return patient_Appointment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String patientId
        {
            get
            {
                return _patientId;
            }
            set
            {
                OnpatientIdChanging(value);
                ReportPropertyChanging("patientId");
                _patientId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("patientId");
                OnpatientIdChanged();
            }
        }
        private global::System.String _patientId;
        partial void OnpatientIdChanging(global::System.String value);
        partial void OnpatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String appntId
        {
            get
            {
                return _appntId;
            }
            set
            {
                if (_appntId != value)
                {
                    OnappntIdChanging(value);
                    ReportPropertyChanging("appntId");
                    _appntId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("appntId");
                    OnappntIdChanged();
                }
            }
        }
        private global::System.String _appntId;
        partial void OnappntIdChanging(global::System.String value);
        partial void OnappntIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dateId
        {
            get
            {
                return _dateId;
            }
            set
            {
                OndateIdChanging(value);
                ReportPropertyChanging("dateId");
                _dateId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("dateId");
                OndateIdChanged();
            }
        }
        private global::System.String _dateId;
        partial void OndateIdChanging(global::System.String value);
        partial void OndateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String upcomingPast
        {
            get
            {
                return _upcomingPast;
            }
            set
            {
                OnupcomingPastChanging(value);
                ReportPropertyChanging("upcomingPast");
                _upcomingPast = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("upcomingPast");
                OnupcomingPastChanged();
            }
        }
        private global::System.String _upcomingPast;
        partial void OnupcomingPastChanging(global::System.String value);
        partial void OnupcomingPastChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String doctorId
        {
            get
            {
                return _doctorId;
            }
            set
            {
                OndoctorIdChanging(value);
                ReportPropertyChanging("doctorId");
                _doctorId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("doctorId");
                OndoctorIdChanged();
            }
        }
        private global::System.String _doctorId;
        partial void OndoctorIdChanging(global::System.String value);
        partial void OndoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> startTime
        {
            get
            {
                return _startTime;
            }
            set
            {
                OnstartTimeChanging(value);
                ReportPropertyChanging("startTime");
                _startTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("startTime");
                OnstartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _startTime;
        partial void OnstartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnstartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> endTime
        {
            get
            {
                return _endTime;
            }
            set
            {
                OnendTimeChanging(value);
                ReportPropertyChanging("endTime");
                _endTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("endTime");
                OnendTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _endTime;
        partial void OnendTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnendTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prescriptionId
        {
            get
            {
                return _prescriptionId;
            }
            set
            {
                OnprescriptionIdChanging(value);
                ReportPropertyChanging("prescriptionId");
                _prescriptionId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("prescriptionId");
                OnprescriptionIdChanged();
            }
        }
        private global::System.String _prescriptionId;
        partial void OnprescriptionIdChanging(global::System.String value);
        partial void OnprescriptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Patient_Appointment_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Appointment_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Appointment_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Appointment_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Appointment_Patient", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HealthCareNewModel", Name="Patient_Prescription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient_Prescription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient_Prescription object.
        /// </summary>
        /// <param name="prescriptionId">Initial value of the prescriptionId property.</param>
        /// <param name="patientId">Initial value of the patientId property.</param>
        /// <param name="dateIssued">Initial value of the dateIssued property.</param>
        /// <param name="doctorId">Initial value of the doctorId property.</param>
        public static Patient_Prescription CreatePatient_Prescription(global::System.String prescriptionId, global::System.String patientId, global::System.DateTime dateIssued, global::System.String doctorId)
        {
            Patient_Prescription patient_Prescription = new Patient_Prescription();
            patient_Prescription.prescriptionId = prescriptionId;
            patient_Prescription.patientId = patientId;
            patient_Prescription.dateIssued = dateIssued;
            patient_Prescription.doctorId = doctorId;
            return patient_Prescription;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String prescriptionId
        {
            get
            {
                return _prescriptionId;
            }
            set
            {
                if (_prescriptionId != value)
                {
                    OnprescriptionIdChanging(value);
                    ReportPropertyChanging("prescriptionId");
                    _prescriptionId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("prescriptionId");
                    OnprescriptionIdChanged();
                }
            }
        }
        private global::System.String _prescriptionId;
        partial void OnprescriptionIdChanging(global::System.String value);
        partial void OnprescriptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String patientId
        {
            get
            {
                return _patientId;
            }
            set
            {
                OnpatientIdChanging(value);
                ReportPropertyChanging("patientId");
                _patientId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("patientId");
                OnpatientIdChanged();
            }
        }
        private global::System.String _patientId;
        partial void OnpatientIdChanging(global::System.String value);
        partial void OnpatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateIssued
        {
            get
            {
                return _dateIssued;
            }
            set
            {
                OndateIssuedChanging(value);
                ReportPropertyChanging("dateIssued");
                _dateIssued = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateIssued");
                OndateIssuedChanged();
            }
        }
        private global::System.DateTime _dateIssued;
        partial void OndateIssuedChanging(global::System.DateTime value);
        partial void OndateIssuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String doctorId
        {
            get
            {
                return _doctorId;
            }
            set
            {
                OndoctorIdChanging(value);
                ReportPropertyChanging("doctorId");
                _doctorId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("doctorId");
                OndoctorIdChanged();
            }
        }
        private global::System.String _doctorId;
        partial void OndoctorIdChanging(global::System.String value);
        partial void OndoctorIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Patient_Prescription_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Prescription_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Prescription_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Prescription_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Prescription_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Patient_Treatment_Patient_Prescription", "Patient_Treatment")]
        public EntityCollection<Patient_Treatment> Patient_Treatment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient_Treatment>("HealthCareNewModel.FK_Patient_Treatment_Patient_Prescription", "Patient_Treatment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient_Treatment>("HealthCareNewModel.FK_Patient_Treatment_Patient_Prescription", "Patient_Treatment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Prescription_Medicine_Patient_Prescription", "Prescription_Medicine")]
        public EntityCollection<Prescription_Medicine> Prescription_Medicine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prescription_Medicine>("HealthCareNewModel.FK_Prescription_Medicine_Patient_Prescription", "Prescription_Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prescription_Medicine>("HealthCareNewModel.FK_Prescription_Medicine_Patient_Prescription", "Prescription_Medicine", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HealthCareNewModel", Name="Patient_Room")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient_Room : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient_Room object.
        /// </summary>
        /// <param name="patientId">Initial value of the patientId property.</param>
        /// <param name="roomId">Initial value of the roomId property.</param>
        /// <param name="treatmentId">Initial value of the treatmentId property.</param>
        public static Patient_Room CreatePatient_Room(global::System.String patientId, global::System.String roomId, global::System.String treatmentId)
        {
            Patient_Room patient_Room = new Patient_Room();
            patient_Room.patientId = patientId;
            patient_Room.roomId = roomId;
            patient_Room.treatmentId = treatmentId;
            return patient_Room;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String patientId
        {
            get
            {
                return _patientId;
            }
            set
            {
                OnpatientIdChanging(value);
                ReportPropertyChanging("patientId");
                _patientId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("patientId");
                OnpatientIdChanged();
            }
        }
        private global::System.String _patientId;
        partial void OnpatientIdChanging(global::System.String value);
        partial void OnpatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String roomId
        {
            get
            {
                return _roomId;
            }
            set
            {
                if (_roomId != value)
                {
                    OnroomIdChanging(value);
                    ReportPropertyChanging("roomId");
                    _roomId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("roomId");
                    OnroomIdChanged();
                }
            }
        }
        private global::System.String _roomId;
        partial void OnroomIdChanging(global::System.String value);
        partial void OnroomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> fromDate
        {
            get
            {
                return _fromDate;
            }
            set
            {
                OnfromDateChanging(value);
                ReportPropertyChanging("fromDate");
                _fromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fromDate");
                OnfromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _fromDate;
        partial void OnfromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnfromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> toDate
        {
            get
            {
                return _toDate;
            }
            set
            {
                OntoDateChanging(value);
                ReportPropertyChanging("toDate");
                _toDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("toDate");
                OntoDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _toDate;
        partial void OntoDateChanging(Nullable<global::System.DateTime> value);
        partial void OntoDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String treatmentId
        {
            get
            {
                return _treatmentId;
            }
            set
            {
                OntreatmentIdChanging(value);
                ReportPropertyChanging("treatmentId");
                _treatmentId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("treatmentId");
                OntreatmentIdChanged();
            }
        }
        private global::System.String _treatmentId;
        partial void OntreatmentIdChanging(global::System.String value);
        partial void OntreatmentIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Patient_Room_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Room_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Room_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Room_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Room_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Room_Patient_Room", "Room")]
        public Room Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("HealthCareNewModel.FK_Room_Patient_Room", "Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("HealthCareNewModel.FK_Room_Patient_Room", "Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Room> RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("HealthCareNewModel.FK_Room_Patient_Room", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Room>("HealthCareNewModel.FK_Room_Patient_Room", "Room", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HealthCareNewModel", Name="Patient_Treatment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient_Treatment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient_Treatment object.
        /// </summary>
        /// <param name="treatmentId">Initial value of the treatmentId property.</param>
        /// <param name="patientId">Initial value of the patientId property.</param>
        /// <param name="doctorId">Initial value of the doctorId property.</param>
        public static Patient_Treatment CreatePatient_Treatment(global::System.String treatmentId, global::System.String patientId, global::System.String doctorId)
        {
            Patient_Treatment patient_Treatment = new Patient_Treatment();
            patient_Treatment.treatmentId = treatmentId;
            patient_Treatment.patientId = patientId;
            patient_Treatment.doctorId = doctorId;
            return patient_Treatment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String treatmentId
        {
            get
            {
                return _treatmentId;
            }
            set
            {
                if (_treatmentId != value)
                {
                    OntreatmentIdChanging(value);
                    ReportPropertyChanging("treatmentId");
                    _treatmentId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("treatmentId");
                    OntreatmentIdChanged();
                }
            }
        }
        private global::System.String _treatmentId;
        partial void OntreatmentIdChanging(global::System.String value);
        partial void OntreatmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String patientId
        {
            get
            {
                return _patientId;
            }
            set
            {
                OnpatientIdChanging(value);
                ReportPropertyChanging("patientId");
                _patientId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("patientId");
                OnpatientIdChanged();
            }
        }
        private global::System.String _patientId;
        partial void OnpatientIdChanging(global::System.String value);
        partial void OnpatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String doctorId
        {
            get
            {
                return _doctorId;
            }
            set
            {
                OndoctorIdChanging(value);
                ReportPropertyChanging("doctorId");
                _doctorId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("doctorId");
                OndoctorIdChanged();
            }
        }
        private global::System.String _doctorId;
        partial void OndoctorIdChanging(global::System.String value);
        partial void OndoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prescriptionId
        {
            get
            {
                return _prescriptionId;
            }
            set
            {
                OnprescriptionIdChanging(value);
                ReportPropertyChanging("prescriptionId");
                _prescriptionId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("prescriptionId");
                OnprescriptionIdChanged();
            }
        }
        private global::System.String _prescriptionId;
        partial void OnprescriptionIdChanging(global::System.String value);
        partial void OnprescriptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> startDate
        {
            get
            {
                return _startDate;
            }
            set
            {
                OnstartDateChanging(value);
                ReportPropertyChanging("startDate");
                _startDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("startDate");
                OnstartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _startDate;
        partial void OnstartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnstartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> endDate
        {
            get
            {
                return _endDate;
            }
            set
            {
                OnendDateChanging(value);
                ReportPropertyChanging("endDate");
                _endDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("endDate");
                OnendDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _endDate;
        partial void OnendDateChanging(Nullable<global::System.DateTime> value);
        partial void OnendDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String roomId
        {
            get
            {
                return _roomId;
            }
            set
            {
                OnroomIdChanging(value);
                ReportPropertyChanging("roomId");
                _roomId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("roomId");
                OnroomIdChanged();
            }
        }
        private global::System.String _roomId;
        partial void OnroomIdChanging(global::System.String value);
        partial void OnroomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Patient_Treatment_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Treatment_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Treatment_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Treatment_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("HealthCareNewModel.FK_Patient_Treatment_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Patient_Treatment_Patient_Prescription", "Patient_Prescription")]
        public Patient_Prescription Patient_Prescription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient_Prescription>("HealthCareNewModel.FK_Patient_Treatment_Patient_Prescription", "Patient_Prescription").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient_Prescription>("HealthCareNewModel.FK_Patient_Treatment_Patient_Prescription", "Patient_Prescription").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient_Prescription> Patient_PrescriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient_Prescription>("HealthCareNewModel.FK_Patient_Treatment_Patient_Prescription", "Patient_Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient_Prescription>("HealthCareNewModel.FK_Patient_Treatment_Patient_Prescription", "Patient_Prescription", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HealthCareNewModel", Name="Prescription_Medicine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prescription_Medicine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Prescription_Medicine object.
        /// </summary>
        /// <param name="medicineId">Initial value of the medicineId property.</param>
        /// <param name="prescriptionId">Initial value of the prescriptionId property.</param>
        public static Prescription_Medicine CreatePrescription_Medicine(global::System.String medicineId, global::System.String prescriptionId)
        {
            Prescription_Medicine prescription_Medicine = new Prescription_Medicine();
            prescription_Medicine.medicineId = medicineId;
            prescription_Medicine.prescriptionId = prescriptionId;
            return prescription_Medicine;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String medicineId
        {
            get
            {
                return _medicineId;
            }
            set
            {
                if (_medicineId != value)
                {
                    OnmedicineIdChanging(value);
                    ReportPropertyChanging("medicineId");
                    _medicineId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("medicineId");
                    OnmedicineIdChanged();
                }
            }
        }
        private global::System.String _medicineId;
        partial void OnmedicineIdChanging(global::System.String value);
        partial void OnmedicineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String prescriptionId
        {
            get
            {
                return _prescriptionId;
            }
            set
            {
                OnprescriptionIdChanging(value);
                ReportPropertyChanging("prescriptionId");
                _prescriptionId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("prescriptionId");
                OnprescriptionIdChanged();
            }
        }
        private global::System.String _prescriptionId;
        partial void OnprescriptionIdChanging(global::System.String value);
        partial void OnprescriptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> quantity
        {
            get
            {
                return _quantity;
            }
            set
            {
                OnquantityChanging(value);
                ReportPropertyChanging("quantity");
                _quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quantity");
                OnquantityChanged();
            }
        }
        private Nullable<global::System.Int32> _quantity;
        partial void OnquantityChanging(Nullable<global::System.Int32> value);
        partial void OnquantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> days
        {
            get
            {
                return _days;
            }
            set
            {
                OndaysChanging(value);
                ReportPropertyChanging("days");
                _days = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("days");
                OndaysChanged();
            }
        }
        private Nullable<global::System.Int32> _days;
        partial void OndaysChanging(Nullable<global::System.Int32> value);
        partial void OndaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String inTake
        {
            get
            {
                return _inTake;
            }
            set
            {
                OninTakeChanging(value);
                ReportPropertyChanging("inTake");
                _inTake = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("inTake");
                OninTakeChanged();
            }
        }
        private global::System.String _inTake;
        partial void OninTakeChanging(global::System.String value);
        partial void OninTakeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Prescription_Medicine_Patient_Prescription", "Patient_Prescription")]
        public Patient_Prescription Patient_Prescription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient_Prescription>("HealthCareNewModel.FK_Prescription_Medicine_Patient_Prescription", "Patient_Prescription").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient_Prescription>("HealthCareNewModel.FK_Prescription_Medicine_Patient_Prescription", "Patient_Prescription").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient_Prescription> Patient_PrescriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient_Prescription>("HealthCareNewModel.FK_Prescription_Medicine_Patient_Prescription", "Patient_Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient_Prescription>("HealthCareNewModel.FK_Prescription_Medicine_Patient_Prescription", "Patient_Prescription", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HealthCareNewModel", Name="Room")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Room : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Room object.
        /// </summary>
        /// <param name="roomId">Initial value of the roomId property.</param>
        public static Room CreateRoom(global::System.String roomId)
        {
            Room room = new Room();
            room.roomId = roomId;
            return room;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String roomId
        {
            get
            {
                return _roomId;
            }
            set
            {
                if (_roomId != value)
                {
                    OnroomIdChanging(value);
                    ReportPropertyChanging("roomId");
                    _roomId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("roomId");
                    OnroomIdChanged();
                }
            }
        }
        private global::System.String _roomId;
        partial void OnroomIdChanging(global::System.String value);
        partial void OnroomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String roomNum
        {
            get
            {
                return _roomNum;
            }
            set
            {
                OnroomNumChanging(value);
                ReportPropertyChanging("roomNum");
                _roomNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("roomNum");
                OnroomNumChanged();
            }
        }
        private global::System.String _roomNum;
        partial void OnroomNumChanging(global::System.String value);
        partial void OnroomNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> costPerDay
        {
            get
            {
                return _costPerDay;
            }
            set
            {
                OncostPerDayChanging(value);
                ReportPropertyChanging("costPerDay");
                _costPerDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("costPerDay");
                OncostPerDayChanged();
            }
        }
        private Nullable<global::System.Double> _costPerDay;
        partial void OncostPerDayChanging(Nullable<global::System.Double> value);
        partial void OncostPerDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String vacancy
        {
            get
            {
                return _vacancy;
            }
            set
            {
                OnvacancyChanging(value);
                ReportPropertyChanging("vacancy");
                _vacancy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("vacancy");
                OnvacancyChanged();
            }
        }
        private global::System.String _vacancy;
        partial void OnvacancyChanging(global::System.String value);
        partial void OnvacancyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> phoneNum
        {
            get
            {
                return _phoneNum;
            }
            set
            {
                OnphoneNumChanging(value);
                ReportPropertyChanging("phoneNum");
                _phoneNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("phoneNum");
                OnphoneNumChanged();
            }
        }
        private Nullable<global::System.Int32> _phoneNum;
        partial void OnphoneNumChanging(Nullable<global::System.Int32> value);
        partial void OnphoneNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> startDate
        {
            get
            {
                return _startDate;
            }
            set
            {
                OnstartDateChanging(value);
                ReportPropertyChanging("startDate");
                _startDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("startDate");
                OnstartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _startDate;
        partial void OnstartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnstartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> endDate
        {
            get
            {
                return _endDate;
            }
            set
            {
                OnendDateChanging(value);
                ReportPropertyChanging("endDate");
                _endDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("endDate");
                OnendDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _endDate;
        partial void OnendDateChanging(Nullable<global::System.DateTime> value);
        partial void OnendDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String location
        {
            get
            {
                return _location;
            }
            set
            {
                OnlocationChanging(value);
                ReportPropertyChanging("location");
                _location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("location");
                OnlocationChanged();
            }
        }
        private global::System.String _location;
        partial void OnlocationChanging(global::System.String value);
        partial void OnlocationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Doctor_Room_Room", "Doctor_Room")]
        public EntityCollection<Doctor_Room> Doctor_Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doctor_Room>("HealthCareNewModel.FK_Doctor_Room_Room", "Doctor_Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doctor_Room>("HealthCareNewModel.FK_Doctor_Room_Room", "Doctor_Room", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Room_Patient_Room", "Patient_Room")]
        public Patient_Room Patient_Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient_Room>("HealthCareNewModel.FK_Room_Patient_Room", "Patient_Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient_Room>("HealthCareNewModel.FK_Room_Patient_Room", "Patient_Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient_Room> Patient_RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient_Room>("HealthCareNewModel.FK_Room_Patient_Room", "Patient_Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient_Room>("HealthCareNewModel.FK_Room_Patient_Room", "Patient_Room", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Staff_Room", "Staff")]
        public EntityCollection<Staff> Staffs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Staff>("HealthCareNewModel.FK_Staff_Room", "Staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Staff>("HealthCareNewModel.FK_Staff_Room", "Staff", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HealthCareNewModel", Name="Specialization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Specialization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Specialization object.
        /// </summary>
        /// <param name="specId">Initial value of the specId property.</param>
        /// <param name="specialize">Initial value of the specialize property.</param>
        public static Specialization CreateSpecialization(global::System.String specId, global::System.String specialize)
        {
            Specialization specialization = new Specialization();
            specialization.specId = specId;
            specialization.specialize = specialize;
            return specialization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String specId
        {
            get
            {
                return _specId;
            }
            set
            {
                if (_specId != value)
                {
                    OnspecIdChanging(value);
                    ReportPropertyChanging("specId");
                    _specId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("specId");
                    OnspecIdChanged();
                }
            }
        }
        private global::System.String _specId;
        partial void OnspecIdChanging(global::System.String value);
        partial void OnspecIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String specialize
        {
            get
            {
                return _specialize;
            }
            set
            {
                OnspecializeChanging(value);
                ReportPropertyChanging("specialize");
                _specialize = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("specialize");
                OnspecializeChanged();
            }
        }
        private global::System.String _specialize;
        partial void OnspecializeChanging(global::System.String value);
        partial void OnspecializeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HealthCareNewModel", Name="Staff")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Staff : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Staff object.
        /// </summary>
        /// <param name="staffId">Initial value of the staffId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="type">Initial value of the type property.</param>
        /// <param name="dob">Initial value of the dob property.</param>
        /// <param name="gender">Initial value of the gender property.</param>
        /// <param name="phone">Initial value of the phone property.</param>
        /// <param name="icNum">Initial value of the icNum property.</param>
        /// <param name="nationality">Initial value of the nationality property.</param>
        /// <param name="street">Initial value of the street property.</param>
        /// <param name="country">Initial value of the country property.</param>
        /// <param name="postalCode">Initial value of the postalCode property.</param>
        public static Staff CreateStaff(global::System.String staffId, global::System.String name, global::System.String type, global::System.DateTime dob, global::System.String gender, global::System.Int32 phone, global::System.String icNum, global::System.String nationality, global::System.String street, global::System.String country, global::System.Int32 postalCode)
        {
            Staff staff = new Staff();
            staff.staffId = staffId;
            staff.name = name;
            staff.type = type;
            staff.dob = dob;
            staff.gender = gender;
            staff.phone = phone;
            staff.icNum = icNum;
            staff.nationality = nationality;
            staff.street = street;
            staff.country = country;
            staff.postalCode = postalCode;
            return staff;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String staffId
        {
            get
            {
                return _staffId;
            }
            set
            {
                if (_staffId != value)
                {
                    OnstaffIdChanging(value);
                    ReportPropertyChanging("staffId");
                    _staffId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("staffId");
                    OnstaffIdChanged();
                }
            }
        }
        private global::System.String _staffId;
        partial void OnstaffIdChanging(global::System.String value);
        partial void OnstaffIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dob
        {
            get
            {
                return _dob;
            }
            set
            {
                OndobChanging(value);
                ReportPropertyChanging("dob");
                _dob = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dob");
                OndobChanged();
            }
        }
        private global::System.DateTime _dob;
        partial void OndobChanging(global::System.DateTime value);
        partial void OndobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String gender
        {
            get
            {
                return _gender;
            }
            set
            {
                OngenderChanging(value);
                ReportPropertyChanging("gender");
                _gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("gender");
                OngenderChanged();
            }
        }
        private global::System.String _gender;
        partial void OngenderChanging(global::System.String value);
        partial void OngenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 phone
        {
            get
            {
                return _phone;
            }
            set
            {
                OnphoneChanging(value);
                ReportPropertyChanging("phone");
                _phone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("phone");
                OnphoneChanged();
            }
        }
        private global::System.Int32 _phone;
        partial void OnphoneChanging(global::System.Int32 value);
        partial void OnphoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String icNum
        {
            get
            {
                return _icNum;
            }
            set
            {
                OnicNumChanging(value);
                ReportPropertyChanging("icNum");
                _icNum = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("icNum");
                OnicNumChanged();
            }
        }
        private global::System.String _icNum;
        partial void OnicNumChanging(global::System.String value);
        partial void OnicNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nationality
        {
            get
            {
                return _nationality;
            }
            set
            {
                OnnationalityChanging(value);
                ReportPropertyChanging("nationality");
                _nationality = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nationality");
                OnnationalityChanged();
            }
        }
        private global::System.String _nationality;
        partial void OnnationalityChanging(global::System.String value);
        partial void OnnationalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String roomId
        {
            get
            {
                return _roomId;
            }
            set
            {
                OnroomIdChanging(value);
                ReportPropertyChanging("roomId");
                _roomId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("roomId");
                OnroomIdChanged();
            }
        }
        private global::System.String _roomId;
        partial void OnroomIdChanging(global::System.String value);
        partial void OnroomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String street
        {
            get
            {
                return _street;
            }
            set
            {
                OnstreetChanging(value);
                ReportPropertyChanging("street");
                _street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("street");
                OnstreetChanged();
            }
        }
        private global::System.String _street;
        partial void OnstreetChanging(global::System.String value);
        partial void OnstreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String area
        {
            get
            {
                return _area;
            }
            set
            {
                OnareaChanging(value);
                ReportPropertyChanging("area");
                _area = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("area");
                OnareaChanged();
            }
        }
        private global::System.String _area;
        partial void OnareaChanging(global::System.String value);
        partial void OnareaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 postalCode
        {
            get
            {
                return _postalCode;
            }
            set
            {
                OnpostalCodeChanging(value);
                ReportPropertyChanging("postalCode");
                _postalCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("postalCode");
                OnpostalCodeChanged();
            }
        }
        private global::System.Int32 _postalCode;
        partial void OnpostalCodeChanging(global::System.Int32 value);
        partial void OnpostalCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HealthCareNewModel", "FK_Staff_Room", "Room")]
        public Room Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("HealthCareNewModel.FK_Staff_Room", "Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("HealthCareNewModel.FK_Staff_Room", "Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Room> RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("HealthCareNewModel.FK_Staff_Room", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Room>("HealthCareNewModel.FK_Staff_Room", "Room", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
